# include deep buffer config if buffer size is in 1 - 1000 ms.
IncludeByKey.DEEPBUFFER_FW_DMA_MS {
	"([1-9]|[1-9][0-9]|[1-9][0-9][0-9]|1000)" "platform/intel/deep-buffer.conf"
}

#
# List of all DAIs
#
Object.Dai.ALH [
	{
		dai_index 0
		id 		$SDW_JACK_OUT_BE_ID
		direction	"playback"
		name		$SDW_JACK_OUT_STREAM
		default_hw_conf_id	0
		rate			48000
		channels		2

		Object.Base.hw_config.1 {
			id	0
			name	"ALH2"
		}
	}
	{
		dai_index 10
		id 		$SDW_JACK_IN_BE_ID
		direction	"capture"
		name		$SDW_JACK_IN_STREAM
		default_hw_conf_id	0
		rate			48000
		channels		2

		Object.Base.hw_config.1 {
			id	0
			name	"ALH3"
		}
	}
]

#
# Pipeline definitions
#

Object.Pipeline {
	host-copier-gain-mixin-playback [
		{
			index 0

			Object.Widget.host-copier.1 {
				stream_name "volume playback 0"
				pcm_id 0
			}
			Object.Widget.gain.1 {
				Object.Control.mixer.1 {
					name '1 Playback Volume 0'
					}
			}
		}
	]

	mixout-gain-alh-dai-copier-playback [
		{
			index 1

			Object.Widget.alh-copier.1 {
				stream_name $SDW_JACK_OUT_STREAM
				node_type $ALH_LINK_OUTPUT_CLASS
			}
			Object.Widget.gain.1 {
				Object.Control.mixer.1 {
					name '2 Main Playback Volume'
				}
			}
		}
	]

	host-gateway-capture [
		{
			index 10

			Object.Widget.host-copier.1 {
				stream_name	"Passthrough Capture 0"
				pcm_id 1
				Object.Base.audio_format.1 {
					# 32/32 -> 16/16 bits conversion is done here
					in_bit_depth	32
					in_valid_bit_depth	32
				}
			}
		}
	]
}

# Jack capture pipeline widgets
Object.Widget {
	alh-copier [
		{
			stream_name	$SDW_JACK_IN_STREAM
			direction	"capture"
			type		"dai_out"
			index		11
			node_type $ALH_LINK_INPUT_CLASS
			num_input_audio_formats 1
			num_output_audio_formats 1
			num_output_pins 1

			Object.Base.audio_format.1 {
				in_bit_depth		32
				in_valid_bit_depth	32
				out_bit_depth		32
				out_valid_bit_depth	32
			}
		}
	]

	eqiir [
		{
			num_input_audio_formats 1
			num_output_audio_formats 1
			index		11
			Object.Base.audio_format.1 {
				in_bit_depth		32
				in_valid_bit_depth	32
				out_bit_depth		32
				out_valid_bit_depth	32
			}

			Object.Control.bytes."1" {
				<include/components/eqiir/highpass_40hz_0db_48khz.conf>
				name '4 Main capture Iir Eq'
			}
		}
	]

	pipeline [
		{
			index		11
			priority		0
			lp_mode		0
			dynamic_pipeline	1
		}
	]
}

Object.PCM.pcm [
	{
		name	"Jack out"
		id 0
		direction	"playback"
		Object.Base.fe_dai.1 {
			name	"Jack out"
		}

		Object.PCM.pcm_caps.1 {
			name "volume playback 0"
			formats 'S16_LE,S32_LE'
		}
	}
	{
		name	"Jack in"
		id 1
		direction	"capture"
		Object.Base.fe_dai.1 {
			name	"Jack in"
		}

		Object.PCM.pcm_caps.1 {
			name "Passthrough Capture 0"
			formats 'S16_LE,S32_LE'
		}
	}
]

Object.Base.route [
	{
		source	"gain.1.1"
		sink	"alh-copier.$SDW_JACK_OUT_STREAM.0"
	}
	{
		source "mixin.0.1"
		sink "mixout.1.1"
	}
	{
		source	"alh-copier.$SDW_JACK_IN_STREAM.0"
		sink	"eqiir.11.0"
	}
	{
		source	"eqiir.11.0"
		sink	"host-copier.1.capture"
	}
	{
		source	"host-copier.0.playback"
		sink	"gain.0.1"
	}
]
