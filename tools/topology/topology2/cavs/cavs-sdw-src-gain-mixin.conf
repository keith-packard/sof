<searchdir:cavs>
<searchdir:include>
<searchdir:include/common>
<searchdir:include/components>
<searchdir:include/components/cavs>
<searchdir:include/dais>
<searchdir:include/controls>
<searchdir:include/pipelines/cavs>

<vendor-token.conf>
<tokens.conf>
<virtual.conf>
<src-gain-mixin-playback.conf>
<mixout-gain-dai-copier-playback.conf>
<passthrough-capture.conf>
<passthrough-be.conf>
<data.conf>
<pcm.conf>
<pcm_caps.conf>
<fe_dai.conf>
<alh.conf>
<hw_config.conf>
<manifest.conf>
<route.conf>
<cavs/common_definitions.conf>
<copier.conf>
<pipeline.conf>
<dai.conf>
<host.conf>

Define {
	SDW_PLAYBACK_PCM	'SDW0-Playback'
	SDW_CAPTURE_PCM		'SDW0-Capture'
	PLAYBACK_LINK_ID	0
	CAPTURE_LINK_ID		1
}

#
# List of all DAIs
#
#ALH Index: 0, Direction: duplex
Object.Dai {
	ALH."2" {
		id 		$PLAYBACK_LINK_ID
		direction	"playback"
		name		$SDW_PLAYBACK_PCM
		default_hw_conf_id	0
		rate			48000
		channels		2

		Object.Base.hw_config."ALH2" {
			id	0
		}
	}
	ALH."3" {
		id 		$CAPTURE_LINK_ID
		direction	"capture"
		name		$SDW_CAPTURE_PCM
		default_hw_conf_id	1
		rate			48000
		channels		2

		Object.Base.hw_config."ALH3" {
			id	1
		}
	}
}

#
# Pipeline definitions
#

# Pipeline ID:1 PCM ID: 0
Object.Pipeline {
	src-gain-mixin-playback."1" {
		index 1

		Object.Widget.copier.1.stream_name	"Gain Playback 0"
                Object.Widget.gain.1{
                        Object.Control.mixer.1 {
                                name 'Src Playback Volume'
                        }
                }

	}
	mixout-gain-dai-copier-playback."3" {
		index 2

		Object.Widget.pipeline.1 {
			stream_name	'copier.ALH.2.1'
		}
		Object.Widget.copier.1 {
			stream_name	$SDW_PLAYBACK_PCM
			dai_type	"ALH"
			copier_type	"ALH"
			type		"dai_in"
			node_type $ALH_LINK_OUTPUT_CLASS
		}

                Object.Widget.gain.1 {
                        Object.Control.mixer.1 {
                                name 'Main Playback Volume'
                        }
                }
	}

	passthrough-capture."4" {
		index 4

		Object.Widget.copier.1.stream_name	"Passthrough Capture 0"
		Object.Widget.copier.1.Object.Base.audio_format.1 {
			# 32 -> 16 bits conversion is done here,
			# so in_bit_depth is 32 (and out_bit_depth is 16).
			in_bit_depth	32
		}
	}
	passthrough-be.2 {
		direction	"capture"
		index 3
		copier_type "ALH"
		Object.Widget.pipeline.1 {
			stream_name	'copier.ALH.3.1'
		}
		Object.Widget.copier.1 {
			stream_name	$SDW_CAPTURE_PCM
			dai_type	"ALH"
			copier_type	"ALH"
			type		"dai_out"
			node_type $ALH_LINK_INPUT_CLASS
		}
	}
}

Object.PCM {
	pcm."0" {
		name	"Jack out"
		id 0
		direction	"playback"
		Object.Base.fe_dai."Jack out" {}

		Object.PCM.pcm_caps."playback" {
			name "Gain Playback 0"
			formats 'S16_LE,S32_LE'
			rate_min 16000
			rate_max 48000
		}
	}
	pcm."1" {
		name	"Jack in"
		id 1
		direction	"capture"
		Object.Base.fe_dai."Jack in" {}

		Object.PCM.pcm_caps."capture" {
			name "Passthrough Capture 0"
			formats 'S16_LE,S32_LE'
		}
	}
}

Object.Base {
	route."1" {
		source	"mixin.1.1"
		sink	"mixout.2.1"
	}

        route."2" {
                source 'gain.2.1'
                sink 'copier.ALH.2.1'
        }

	route."3" {
		source	"copier.ALH.3.1"
		sink	"copier.host.4.1"
	}
}
